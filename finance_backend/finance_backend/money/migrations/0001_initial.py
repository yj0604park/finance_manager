# Generated by Django 5.0.13 on 2025-03-16 22:09

import django.db.models.deletion
import django_choices_field.fields
import finance_backend.money.choices
import money.choices
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AmountSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', django_choices_field.fields.TextChoicesField(choices=[('KRW', '원화'), ('USD', '달러')], choices_enum=money.choices.CurrencyType, default='USD', max_length=3)),
                ('date', models.DateField()),
                ('summary', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DetailItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('category', django_choices_field.fields.TextChoicesField(choices=[('ETC', '기타'), ('FRUIT', '과일'), ('ALCOHOL', '주류'), ('DRINK', '음료'), ('SAUCE', '소스'), ('MEAT', '육류'), ('VEGETABLE', '채소'), ('DAIRY', '유제품'), ('WRAP', '포장지'), ('SNACK', '스낵'), ('NOODLE', '면'), ('BREAD', '빵'), ('DRUG', '약'), ('TAX', '세금'), ('SEAFOOD', '해산물'), ('INGREDIENT', '식재료'), ('APPLIANCE', '가전'), ('STATIONERY', '문구류'), ('BATH', '욕실용품'), ('BABY', '육아용품'), ('COOKER', '주방용품'), ('FOOD', '식품'), ('CLOTHING', '의류'), ('FURNITURE', '가구'), ('SPORTING', '운동용품'), ('UNKNOWN', '알 수 없음')], choices_enum=finance_backend.money.choices.DetailItemCategory, default='ETC', max_length=10)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Retailer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('type', django_choices_field.fields.TextChoicesField(choices=[('ETC', '기타'), ('STORE', '상점'), ('PERSON', '개인'), ('BANK', '은행'), ('SERVICE', '서비스'), ('INCOME', '수입'), ('RESTAURANT', '식당')], choices_enum=finance_backend.money.choices.RetailerType, default='ETC', max_length=20)),
                ('category', django_choices_field.fields.TextChoicesField(choices=[('SERVICE', '서비스'), ('DAILY_NECESSITY', '생필품'), ('MEMBERSHIP', '맴버쉽'), ('GROCERY', '식료품'), ('EAT_OUT', '외식'), ('CLOTHING', '옷'), ('PRESENT', '선물'), ('CAR', '차/주유/운임'), ('HOUSING', '집/월세'), ('LEISURE', '여가'), ('MEDICAL', '의료비'), ('PARENTING', '육아'), ('TRANSFER', '이체'), ('INTEREST', '이자'), ('INCOME', '소득'), ('STOCK', '주식'), ('CASH', '현금'), ('ETC', '기타')], choices_enum=finance_backend.money.choices.TransactionCategory, default='ETC', max_length=30)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', django_choices_field.fields.TextChoicesField(choices=[('KRW', '원화'), ('USD', '달러')], choices_enum=money.choices.CurrencyType, default='USD', max_length=3)),
                ('name', models.CharField(max_length=20)),
                ('ticker', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'ordering': ['ticker'],
            },
        ),
        migrations.CreateModel(
            name='W2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', django_choices_field.fields.TextChoicesField(choices=[('KRW', '원화'), ('USD', '달러')], choices_enum=money.choices.CurrencyType, default='USD', max_length=3)),
                ('year', models.IntegerField()),
                ('wages', models.DecimalField(decimal_places=2, max_digits=15)),
                ('income_tax', models.DecimalField(decimal_places=2, max_digits=15)),
                ('social_security_wages', models.DecimalField(decimal_places=2, max_digits=15)),
                ('social_security_tax', models.DecimalField(decimal_places=2, max_digits=15)),
                ('medicare_wages', models.DecimalField(decimal_places=2, max_digits=15)),
                ('medicare_tax', models.DecimalField(decimal_places=2, max_digits=15)),
                ('box_12', models.JSONField(blank=True, null=True)),
                ('box_14', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', django_choices_field.fields.TextChoicesField(choices=[('KRW', '원화'), ('USD', '달러')], choices_enum=money.choices.CurrencyType, default='USD', max_length=3)),
                ('name', models.CharField(db_collation='C', max_length=200)),
                ('alias', models.CharField(blank=True, max_length=200, null=True)),
                ('type', django_choices_field.fields.TextChoicesField(choices=[('CHECKING_ACCOUNT', '입출금'), ('SAVINGS_ACCOUNT', '저금'), ('INSTALLMENT_SAVING', '적금'), ('TIME_DEPOSIT', '예금'), ('CREDIT_CARD', '신용카드'), ('STOCK', '주식'), ('LOAN', '대출')], choices_enum=finance_backend.money.choices.AccountType, default='CHECKING_ACCOUNT', max_length=20)),
                ('last_update', models.DateTimeField(blank=True, null=True)),
                ('last_transaction', models.DateField(blank=True, null=True)),
                ('first_transaction', models.DateField(blank=True, null=True)),
                ('first_added', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='money.bank')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='money.stock')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('is_internal', models.BooleanField(default=False)),
                ('requires_detail', models.BooleanField(default=False)),
                ('type', django_choices_field.fields.TextChoicesField(choices=[('SERVICE', '서비스'), ('DAILY_NECESSITY', '생필품'), ('MEMBERSHIP', '맴버쉽'), ('GROCERY', '식료품'), ('EAT_OUT', '외식'), ('CLOTHING', '옷'), ('PRESENT', '선물'), ('CAR', '차/주유/운임'), ('HOUSING', '집/월세'), ('LEISURE', '여가'), ('MEDICAL', '의료비'), ('PARENTING', '육아'), ('TRANSFER', '이체'), ('INTEREST', '이자'), ('INCOME', '소득'), ('STOCK', '주식'), ('CASH', '현금'), ('ETC', '기타')], choices_enum=finance_backend.money.choices.TransactionCategory, default='ETC', max_length=30)),
                ('reviewed', models.BooleanField(default=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='money.account')),
                ('related_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.transaction')),
                ('retailer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.retailer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('shares', models.DecimalField(decimal_places=4, max_digits=15)),
                ('balance', models.DecimalField(blank=True, decimal_places=4, default=Decimal('0'), max_digits=15, null=True)),
                ('note', models.TextField(blank=True, default='', null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='money.account')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='money.stock')),
                ('related_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='money.transaction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', django_choices_field.fields.TextChoicesField(choices=[('KRW', '원화'), ('USD', '달러')], choices_enum=money.choices.CurrencyType, default='USD', max_length=3)),
                ('gross_pay', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_adjustment', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_withheld', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_deduction', models.DecimalField(decimal_places=2, max_digits=15)),
                ('net_pay', models.DecimalField(decimal_places=2, max_digits=15)),
                ('pay_detail', models.JSONField()),
                ('adjustment_detail', models.JSONField()),
                ('tax_detail', models.JSONField()),
                ('deduction_detail', models.JSONField()),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='money.transaction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AmazonOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.TextField()),
                ('is_returned', models.BooleanField(default=False)),
                ('return_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='returned_order', to='money.transaction')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.transaction')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='TransactionDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('note', models.CharField(blank=True, max_length=40, null=True)),
                ('count', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='money.detailitem')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='money.transaction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='transaction_files/')),
                ('note', models.TextField(blank=True, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='money.account')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
