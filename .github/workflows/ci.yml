name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ["master", "main"]
    paths-ignore: ["docs/**"]

  push:
    branches: ["master", "main"]
    paths-ignore: ["docs/**"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "yarn"
          cache-dependency-path: "./finance_frontend/yarn.lock"

      - name: Install Dependencies
        working-directory: ./finance_frontend
        run: yarn install --frozen-lockfile

      - name: Build Frontend
        working-directory: ./finance_frontend
        run: yarn build

      - name: Run Tests (if any)
        working-directory: ./finance_frontend
        run: yarn test:run || echo "No tests found, but that's okay"
        continue-on-error: true

  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  # With no caching at all the entire ci process takes 3m to complete!
  pytest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Build the Stack
        run: docker compose -f docker-compose.local.yml build django

      - name: Build the docs
        run: docker compose -f docker-compose.docs.yml build docs

      - name: Check DB Migrations
        run: docker compose -f docker-compose.local.yml run --rm django python manage.py makemigrations --check

      - name: Run DB Migrations
        run: docker compose -f docker-compose.local.yml run --rm django python manage.py migrate

      - name: Run Django Tests with Coverage
        run: |
          mkdir -p coverage
          docker compose -f docker-compose.local.yml run --name django_test django pytest --cov=. --cov-report=xml:/app/coverage.xml
          docker cp django_test:/app/coverage.xml ./coverage/
          docker rm django_test

      - name: Upload coverage report to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: ./coverage/
          retention-days: 5

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          flags: backend
          verbose: true

      - name: Tear down the Stack
        run: docker compose -f docker-compose.local.yml down
